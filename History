@Entity
public class UploadedFileHistory {
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;
    
    private String fileName;
    private String filePath;
    private String uploadedBy;
    private LocalDateTime uploadedAt;

    // Getters and Setters
}



@Repository
public interface UploadedFileHistoryRepository extends JpaRepository<UploadedFileHistory, Long> {
    List<UploadedFileHistory> findByUploadedBy(String uploadedBy);
}



@Service
public class AuditHistoryService {
    @Autowired
    private UploadedFileHistoryRepository repository;

    public List<UploadedFileHistory> getUserUploadedFiles(String username) {
        return repository.findByUploadedBy(username);
    }
}





@Controller
@RequestMapping("/audit-history")
public class AuditHistoryController {

    @Autowired
    private AuditHistoryService auditHistoryService;

    @GetMapping
    public String getAuditHistory(Model model, Principal principal) {
        List<UploadedFileHistory> uploadedFiles = auditHistoryService.getUserUploadedFiles(principal.getName());
        model.addAttribute("uploadedFiles", uploadedFiles);
        return "audit-history";
    }

    @GetMapping("/download/{fileName}")
    public ResponseEntity<Resource> downloadFile(@PathVariable String fileName) throws MalformedURLException {
        Path filePath = Paths.get("uploads").resolve(fileName).normalize();
        Resource resource = new UrlResource(filePath.toUri());

        if (!resource.exists()) {
            return ResponseEntity.notFound().build();
        }

        return ResponseEntity.ok()
                .contentType(MediaType.APPLICATION_OCTET_STREAM)
                .header(HttpHeaders.CONTENT_DISPOSITION, "attachment; filename=\"" + fileName + "\"")
                .body(resource);
    }
}



@Service
public class FileStorageService {
    @Autowired
    private UploadedFileHistoryRepository uploadedFileHistoryRepository;

    public void saveFile(MultipartFile file, String username) throws IOException {
        String fileName = StringUtils.cleanPath(file.getOriginalFilename());
        Path targetLocation = Paths.get("uploads").resolve(fileName);
        Files.copy(file.getInputStream(), targetLocation, StandardCopyOption.REPLACE_EXISTING);

        UploadedFileHistory fileHistory = new UploadedFileHistory();
        fileHistory.setFileName(fileName);
        fileHistory.setFilePath(targetLocation.toString());
        fileHistory.setUploadedBy(username);
        fileHistory.setUploadedAt(LocalDateTime.now());

        uploadedFileHistoryRepository.save(fileHistory);
    }
}




<!DOCTYPE html>
<html xmlns:th="http://www.thymeleaf.org">
<head>
    <title>Audit History</title>
    <link rel="stylesheet" type="text/css" href="/static/main.css">
</head>
<body>
    <div class="container">
        <h2 class="title">Uploaded Files - Audit History</h2>
        <table class="audit-table">
            <thead>
                <tr>
                    <th>File Name</th>
                    <th>Uploaded By</th>
                    <th>Uploaded At</th>
                    <th>Download</th>
                </tr>
            </thead>
            <tbody>
                <tr th:each="file : ${uploadedFiles}">
                    <td th:text="${file.fileName}"></td>
                    <td th:text="${file.uploadedBy}"></td>
                    <td th:text="${file.uploadedAt}"></td>
                    <td><a class="download-link" th:href="@{/audit-history/download/{fileName}(fileName=${file.fileName})}">Download</a></td>
                </tr>
            </tbody>
        </table>
    </div>
</body>
</html>


/* General Styling */
body {
    font-family: 'Arial', sans-serif;
    background: linear-gradient(to right, #1e3c72, #2a5298);
    color: #ffffff;
    text-align: center;
    margin: 0;
    padding: 0;
}

/* Container */
.container {
    width: 80%;
    margin: 50px auto;
    background: rgba(255, 255, 255, 0.1);
    padding: 20px;
    border-radius: 10px;
    box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1);
}

/* Title */
.title {
    font-size: 24px;
    font-weight: bold;
    margin-bottom: 20px;
}

/* Table */
.audit-table {
    width: 100%;
    border-collapse: collapse;
    margin-top: 20px;
}

.audit-table th, .audit-table td {
    padding: 12px;
    border-bottom: 1px solid #ffffff;
}

.audit-table th {
    background: rgba(255, 255, 255, 0.2);
}

.audit-table tr:hover {
    background: rgba(255, 255, 255, 0.3);
}

/* Download Link */
.download-link {
    display: inline-block;
    padding: 8px 12px;
    background: #ff9800;
    color: white;
    text-decoration: none;
    border-radius: 5px;
    transition: 0.3s;
}

.download-link:hover {
    background: #e68900;
}






